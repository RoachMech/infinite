
/// Make the actual button by throwing in a variable argument
/// Like so: make-button($parameters...);
@mixin button-base(
  $background-color: $button-background-color,
  $background-color--hover: $button-background-color--hover,
  $border: $button-border-width $button-border-style $button-border-color,
  $border-radius: $button-border-radius,
  $button-style-name: $button-default-style,
  $box-shadow: $button-box-shadow,
  $color: $button-text-color,
  $color--hover: $button-text-color,
  $cursor: $button-cursor,
  $display: $button-display,
  $font-size: $button-font-size,
  $hover-transition: false,
  $line-height: $button-line-height,
  $margin: $button-margin,
  $outline--focus: $button-outline--focus,
  $padding: $button-padding,
  $text-align: $button-text-align,
  $text-decoration: $button-text-decoration,
  $vertical-align: $button-vertical-align,
  $white-space: $button-white-space
) {
  -webkit-appearance: none;
  background-color: $background-color;
  border: $border;
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  color: $color;
  cursor: $cursor;
  display: $display;
  font-size: $font-size;
  line-height: $line-height;
  margin: $margin;
  padding: $padding;
  text-align: $text-align;
  text-decoration: $text-decoration;
  vertical-align: $vertical-align;
  white-space: $white-space;

  @if $hover-transition {
    @include button-hover-transition($hover-transition, get-button-style($button-style-name));
  } @else {
    &:hover {
      background-color: $background-color--hover;
      color: $color--hover;
    }
  }

  &:focus {
    outline: $button-outline--focus;
  }

}